import npm
import express
import redis
import bailey
import slugify

router = express.Router()
client = redis.createClient()
client.unref()

# load bailey version into context
router.use((req, res, next) ->
    req['baileyVersion'] = bailey.version or '0.0.7'
    next()
)

router.get('/', (req, res) ->
    res.redirect('/new')
)

router.get('/view/:key', (req, res) ->
    client.hincrby('bsweb#{req.params.key}', 'views', 1)
    client.hgetall('bsweb#{req.params.key}', (err, obj) ->
        obj.version = req.baileyVersion
        console.log(obj.views)
        res.render('viewSnippet', obj)
    )
)

router.route('/new')
    .get((req, res) ->
        res.render('newSnippet', {version: req.baileyVersion})
    )
    .post((req, res) ->
        key = slugify(req.param('title'))
        data = {
            bs: req.param('bs')
            js: bailey.parseString(req.param('bs'), {})
            jsBare: bailey.parseString(req.param('bs'), { bare: true })
            jsNode: bailey.parseString(req.param('bs'), { node: true })
            slug: key
            title: req.param('title')
            views: 0
        }
        client.hmset('bsweb#{key}', data)
        res.redirect('/view/#{key}')
        res.render('viewSnippet', data)

    )

export router
