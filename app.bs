import express
import express-flash as flash
import express-session as session
import path
import morgan as logging
cookieParser = require('cookie-parser')
bodyParser = require('body-parser')

routes = require('./routes/index')
deploy = require('./routes/deploy')
api = require('./routes/api')

app = express()

app.set('views', path.join(__dirname, 'views'))
app.set('view engine', 'jade')

app.use(logging('dev'))
app.use(bodyParser.json())
app.use(bodyParser.urlencoded())
app.use(cookieParser())
app.use(express.static(path.join(__dirname, 'public')))
app.use(session({ cookie: { maxAge: 60000 }, secret: 'This is top secret'}))
app.use(flash())

app.use('/deploy', deploy)
app.use('/api', api)
app.use('/', routes)

# catch 404 and forward to error handler
app.use((req, res, next) ->
    err = new Error('Not Found')
    err.status = 404
    next(err)
)

# development error handler
# will print stacktrace
if app.get('env') == 'development'
    app.use((err, req, res, next) ->
        res.status(err.status or 500)
        res.render('error', {
            message: err.message,
            error: err
        })
    )

# production error handler
# no stacktraces leaked to user
app.use((err, req, res, next) ->
    res.status(err.status or 500)
    res.render('error', {
        message: err.message,
        error: {}
    })
)


export app
